<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.compare.pcparts.mapper.PcPartsMapper">

    <insert id="insertItem">
        insert into items
        (
        id,
        item_name,
        store_id,
        item_type,
        is_available,
        price,
        price_pure,
        currency,
        url
        )
        values(
        default,
        #{item_name},
        #{store_id},
        #{item_type},
        #{is_available},
        #{price},
        #{price_pure},
        #{currency},
        #{url}
        )
        ON CONFLICT (url)
        DO
        UPDATE SET
        price = excluded.price,
        is_available = excluded.is_available,
        price_pure = excluded.price_pure
        WHERE not_updatable = false;
    </insert>

    <update id="getBrandName">

    </update>

    <insert id="insertStore">
        insert into store
        values(
        #{id},
        #{store_name},
        #{url},
        #{image_ref},
        #{currency},
        #{prices_including_vat},
        #{vat_percent}
        )
        ON CONFLICT (store_name)
        DO
        UPDATE SET
        url = excluded.url;
    </insert>
    <insert id="insertStoreContactDetail">
        insert into store_contact_detail
        values(
        default,
        #{store_id},
        #{contact_address},
        #{contact_email},
        #{contact_number_1},
        #{contact_number_2},
        #{contact_number_3}
        )
        ON CONFLICT (store_id)
        DO
        UPDATE SET
        contact_address = excluded.contact_address,
        contact_email = excluded.contact_email,
        contact_number_1 = excluded.contact_number_1,
        contact_number_2 = excluded.contact_number_2,
        contact_number_3 = excluded.contact_number_3;
    </insert>
    <insert id="insertStoreOperatingTime">
        insert into store_operating_time
        values(
        default,
        #{store_id},
        #{operating_hours_weekdays},
        #{operating_hours_weekend},
        #{operating_days}
        )
        ON CONFLICT (store_id)
        DO
        UPDATE SET
        operating_hours_weekdays = excluded.operating_hours_weekdays,
        operating_hours_weekend = excluded.operating_hours_weekend,
        operating_days = excluded.operating_days;
    </insert>
    <insert id="insertStoreXPath">
        insert into store_xpath
        values(
        default,
        #{store_id},
        #{xpath},
        #{product_name_xpath},
        #{product_price_xpath},
        #{product_url_xpath},
        #{alt_xpath_1},
        #{alt_xpath_2},
        #{alt_xpath_3}
        )
        ON CONFLICT (store_id)
        DO
        UPDATE SET
        xpath = excluded.xpath,
        product_name_xpath = excluded.product_name_xpath,
        product_price_xpath = excluded.product_price_xpath,
        product_url_xpath = excluded.product_url_xpath,
        alt_xpath_1 = excluded.alt_xpath_1,
        alt_xpath_2 = excluded.alt_xpath_2,
        alt_xpath_3 = excluded.alt_xpath_3;
    </insert>
    <insert id="insertStoreItemsUrl">
        insert into store_items_url
        values(
        default,
        #{store_id},
        #{part_name},
        #{page_url}
        );
    </insert>


    <update id="updateItemNames">
        update items
        set item_name = right(item_name , length(item_name) - 4 )
        where item_name like 'CPU %';

        update items
        set item_name = right(item_name , length(item_name) - 5 )
        where item_name like 'Case %';

        update items
        set item_name = right(item_name , length(item_name) - 4 )
        where item_name like 'Fan %';

        update items
        set item_name = right(item_name , length(item_name) - 12 )
        where item_name like 'Desktop Ram %';

        update items
        set item_name = right(item_name , length(item_name) - 12 )
        where item_name like 'MotherBoard %';

        update items
        set item_name = right(item_name , length(item_name) - 13 )
        where item_name like 'Power Supply %';

        update items
        set item_name = right(item_name , length(item_name) - 4 )
        where item_name like '2.5%';

        update items
        set item_name = right(item_name , length(item_name) - 4 )
        where item_name like '3.5%';

        update items
        set item_name = right(item_name , length(item_name) - 4 )
        where item_name like 'GPU %';

        update items
        set item_name = right(item_name , length(item_name) - 13 )
        where item_name like 'Graphic Card %';

        update items
        set item_name = right(item_name , length(item_name) - 4 )
        where item_name like 'VGA %';

        update items
        set item_name = right(item_name , length(item_name) - 5 )
        where item_name like ' SSD %';

        update items
        set item_name = right(item_name , length(item_name) - 19 )
        where item_name like ' Solid State Drive %';

        update items
        set item_name = right(item_name , length(item_name) - 17 )
        where item_name like ' Hard Disk Drive %';

        update items
        set item_name = right(item_name , length(item_name) - 21 )
        where item_name like ' External Hard Drive %';

        update items
        set item_name = right(item_name , length(item_name) - 12 )
        where item_name like ' Desktop HDD %';

        update items
        set item_name = right(item_name , length(item_name) - 1 )
        where item_name like 'Hard disk Drive %';

    </update>
    <update id="updateBrand">
        update items
        set item_brand = substr(item_name, 1, position(' 'in item_name))
        where id>=1;
    </update>

    <select id="searchItemDB" parameterType = "com.compare.pcparts.search.SearchItem" resultType="com.compare.pcparts.webscrape.PcPartsItem">
        select id, item_name, price, price_pure, url    from items where id >=1
        <choose>
            <when test="keyword != null">
                <bind name="keyword" value="'%' + _parameter.getKeyword() + '%'" />
                and item_name ilike #{keyword}
            </when>
            <otherwise>
                <bind name="keyword" value="'%%'" />
                and item_name ilike #{keyword}
            </otherwise>
        </choose>
        <choose>
            <when test="itemType != null">
                and item_type = #{itemType}
            </when>
            <otherwise>
                ;
            </otherwise>
        </choose>
        <choose>
            <when test="itemBrand != null">
                and item_brand = #{itemBrand}
            </when>
            <when test="minPrice != null">
                and price_pure between #{minprice} and #{maxPrice}
            </when>
            <otherwise>
                ;
            </otherwise>
        </choose>
    </select>

    <select id="searchItemTypeDB" resultType="com.compare.pcparts.webscrape.PcPartsItem">
        SELECT *
        FROM items where item_type = #{itemType};
    </select>
    <select id="searchBrand" resultType="com.compare.pcparts.webscrape.PcPartsItem">
        <bind name="itemBrand" value="itemBrand+'%'"/>
        SELECT *
        FROM items
        where item_name
        ilike #{itemBrand}
    </select>


    <select id="getStoreInfo" resultType="com.compare.pcparts.store.items.StoreItem">
        SELECT *
        FROM store;
    </select>
    <select id="getStoreContactInfo" resultType="com.compare.pcparts.store.items.StoreContactDetailItem">
        SELECT *
        FROM store_contact_detail;
    </select>
    <select id="getStoreOperatingTime" resultType="com.compare.pcparts.store.items.StoreOperatingTimeItem">
        SELECT *
        FROM store_operating_time;
    </select>
    <select id="getStoreXPath" resultType="com.compare.pcparts.store.items.StoreXPathItem">
        select *
        FROM store_xpath
        where store_id = #{id};
    </select>
    <select id="getStoreUrl" resultType="com.compare.pcparts.store.items.StoreUrlItem">
        SELECT *
        FROM store_items_url
        where store_id = #{id} ;
    </select>


</mapper>
